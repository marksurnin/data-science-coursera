head(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
x <- list(a = 1:5, b = rnorm(10))
x
lapply(mean, x)
lapply(x, mean)
sapply(x, mean)
rowSums(x)
?quantile
?rowMeans
?gl
?сфе
?cat
?lm
swirl()
installed.packages()
load('swirl')
library("swirl")
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
summary(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flags, mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
head(flag_shapes)
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(e) e[2])
viewinfo()
sapply(flags, unique)
?vapply
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$landmass, flags$animate, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
head(iris)
?iris
length(iris$Species)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
head(mtcars)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
head(mtcars)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
?with
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
task <- sapply(split(mtcars$hp, mtcars$cyl), mean)
task
task[4]
task$4
task[[4]]
task[1]
task[3] - task[1]
?ls
debug(ls)
ls
?solve
set.seed(1)
rpois(5, 2)
rpois(5,2)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
str(x)
x
e
y
plot(x, y)
?qpois
library("swirl")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
letters
sample(letters)
sample(LETTERS)
flips <- sample(c(0, 1), 100, replace="TRUE", prob = c(0.3, 0.7))
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
flips <- sample(c(0, 1), 100, replace = FALSE, prob = c(0.3, 0.7))
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- (100, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- (n = 100, size = 1, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
play()
flips2 <- rbinom(100, size = 1, prob = 0.7)
nxt()
flips2
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(n = 5, mean = 10)
rpois(10, n = 5)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
str(my_pois)
cm <- colMeans(my_pois)
hist(cm)
cars
data(cars)
?cars
head(cars)
str(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed" ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, title = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars,  sub = "My Plot Subtitle")
?par
?plot
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
?points
plot(cars, pch = 2)
load(mtcars)
mtcars
data(mtcars)
play()
dim(mtcars)
summary(mtcars)
str(mtcars)
head(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars)
hist(mtcars$mpg)
df = data.frame(x = rnorm(9), y = rep(c("a", "b", "c"), each = 3), z = rnorm(9))
df
tables()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
swirl()
library(swirl)
swirl()
path2csv
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
?read.csv
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(data)
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
йгше
quit
quit()
?ldply
library(dplyr)
?ldply
?dplyr
browseVignettes(package = "dplyr")
?complete.cases
complete.cases(airquality)
swirl()
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm_)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 1000)
hist(ppm, col = "green", breaks = 400)
hist(ppm, col = "green", breaks = 300)
hist(ppm, col = "green", breaks = 200)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, color = "green")
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
pollution$region
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
subset(pollution, region == "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution$region == "weat")$ppm, col = "green")
hist(subset(pollution, region == "west"), col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot)
with(pollution, plot(latitude, pm25))
abline(12, lwd = 2, lty = 2)
?abline
abline(h = 12, lwd = 2, lty = 2)
with(pollution, plot(latitude, pm25, col = region))
with(pollution, plot(latitude, pm25, col = pollution$region))
with(pollution, plot(latitude, ppm, col = pollution$region))
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), airquality)
xyplot(Ozone ~ Wind | as.factor(Month), airquality, layout = c(5, 1))
xyplot(Ozone ~ Wind | Month, airquality, layout = c(5, 1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2, 1))
v1
v2
myedit("plot1.R")
pathtofile()
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds_)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color * cut, dataset = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color*cut, dataset = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
s
m
myyylab
diamonds
xyplot(price ~ carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0, 1, len = 6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c('red', 'yellow'))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
showMe(p2(50))
showMe(p2(500))
showMe(p2(5))
showMe(p2(10))
showMe(p2(20))
?rgb
p3 <- colorRampPalette(c('blue', 'green'))
p3 <- colorRampPalette(c('blue', 'green'), alpha = 0.5)
p3(5)
plot(x, y, pch = 19, col = rgb(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .4))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .1))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .9))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .7))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .3))
cols = brewer.pal(3, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20)
)
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, . ~ drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 3)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 5)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 1)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 7)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
swirl()
swirl()
swirl()
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv)
g <- ggplot(mpg, displ, hwy)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
print(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle('Swirl Rules!')
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + labs(title = "Swirl Rules!", labs(x = "Displacement", y = "Hwy Mileage"))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim(-3, 3))
g + geom_line() + coord_cartesian(ylim = c(-3, 3)
)
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm")
)
color
head(diamonds)
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm") + facets(. ~ cut)
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
splom()
trellis.par.set()
library(datasets)
data(airquality)
?points
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
data(movies)
?llines
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
swirl(0)
head(dataMatrix)
heatmap(dataMatrix)
quit()
plot(airquality)
plot(mtcars)