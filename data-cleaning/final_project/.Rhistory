source("corr.R")
source("complete.R")
cr <- corr("specdata", 1500)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 1500)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 1500)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 1500)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 1500)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
?cor
?cor
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 900)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 900)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
x <- list(a = 1:5, b = rnorm(10))
x
lapply(mean, x)
lapply(x, mean)
sapply(x, mean)
rowSums(x)
?quantile
?rowMeans
?gl
?сфе
?cat
?lm
swirl()
installed.packages()
load('swirl')
library("swirl")
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
summary(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flags, mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
head(flag_shapes)
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(e) e[2])
viewinfo()
sapply(flags, unique)
?vapply
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$landmass, flags$animate, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
head(iris)
?iris
length(iris$Species)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
head(mtcars)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
head(mtcars)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
?with
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
task <- sapply(split(mtcars$hp, mtcars$cyl), mean)
task
task[4]
task$4
task[[4]]
task[1]
task[3] - task[1]
?ls
debug(ls)
ls
?solve
set.seed(1)
rpois(5, 2)
rpois(5,2)
rpois(5,2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
str(x)
x
e
y
plot(x, y)
?qpois
library("swirl")
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
letters
sample(letters)
sample(LETTERS)
flips <- sample(c(0, 1), 100, replace="TRUE", prob = c(0.3, 0.7))
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
flips <- sample(c(0, 1), 100, replace = FALSE, prob = c(0.3, 0.7))
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- (100, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- (n = 100, size = 1, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
play()
flips2 <- rbinom(100, size = 1, prob = 0.7)
nxt()
flips2
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(n = 5, mean = 10)
rpois(10, n = 5)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
str(my_pois)
cm <- colMeans(my_pois)
hist(cm)
cars
data(cars)
?cars
head(cars)
str(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed" ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, title = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars,  sub = "My Plot Subtitle")
?par
?plot
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
?points
plot(cars, pch = 2)
load(mtcars)
mtcars
data(mtcars)
play()
dim(mtcars)
summary(mtcars)
str(mtcars)
head(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars)
hist(mtcars$mpg)
df = data.frame(x = rnorm(9), y = rep(c("a", "b", "c"), each = 3), z = rnorm(9))
df
tables()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
swirl()
library(swirl)
swirl()
path2csv
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
?read.csv
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(data)
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
йгше
quit
quit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("June 31, 2016")
mdy("June 30, 2016")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 61)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, )
now()
time()
this_moment <- update(this_moment, hours = 10, minutes = 16)
this_moment
?now
now()
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
?update
arrive <- depart + hours(15) + minutes(59)
arrive <- depart + hours(15) + minutes(50)
?with(tz)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
last.warning
?inverval
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
getwd()
mkdir('./04_text_date')
dir.create("./data-cleaning/04_text_date")
dir.create("./data-cleaning/04_text_dates")
setwd("./data-cleaning/04_text_dates")
getwd()
dir.create("./data")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./data/idaho.csv")
idaho <- read.csv("./data/idaho.csv")
dim(idaho)
names(idaho)
?strsplit
strsplit(names(idaho), "wgtp")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./data/gdp.csv")
gdp <- read.csv("./data/gdp.csv")
dim(gdp)
names(gdp)
head(gdp)
gdp <- read.csv("./data/gdp.csv", skip = 4)
head(gdp)
gdp$X.4
?grep
gdp$X.4
rawGDP <- gdp$X.4
grep(",", rawGDP)
gsub(",", "", rawGDP)
extract_numeric
?extract_numeric
??extract_numeric
library(tidyr)
extract_numeric(rawGDP)
cleanGDP <- extract_numeric(rawGDP)
cleanGDP
mean(cleanGDP)
cleanGDP <- extract_numeric(rawGDP, na.omit = T)
cleanGDP <- extract_numeric(na.omit(rawGDP))
na.omit(rawGDP)
cleanGDP <- extract_numeric(na.omit(rawGDP))
cleanGDP
na.omit(cleanGDP)
mean(na.omit(cleanGDP))
gdp <- read.csv("./data/gdp.csv", skip = 4, rows = 190)
?read.csv
gdp <- read.csv("./data/gdp.csv", skip = 4, nrows = 190)
rawGDP <- gdp$X.4
cleanGDP <- extract_numeric(rawGDP)
cleanGDP <- na.omit(cleanGDP)
mean(cleanGDP)
sum(which(grep("^United", gdp$X.1)))
names(gdp)
head(gdp, 2)
sum(which(grep("^United", gdp$X.3)))
grep("^United", gdp$X.3)
sum(.Last.value)
?grep
length(grep("^United", gdp$X.3))
grep("^United",countryNames), 3
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", des)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "./data/edu.csv")
csv <- read.csv("./data/edu.csv")
head(csv)
head(csv, 1)
head(gdp, 1)
?merge
matchedData <- merge, gdp, edu, by.x = "X", by.y = "CountryCode"
matchedData <- merge, gdp, edu, by.x = "X", by.y = "CountryCode")
matchedData <- merge() gdp, edu, by.x = "X", by.y = "CountryCode")
matchedData <- merge(gdp, edu, by.x = "X", by.y = "CountryCode")
edu <- csv
matchedData <- merge(gdp, edu, by.x = "X", by.y = "CountryCode")
matchedData
head(matchedData, 1)
head(edu, 2)
names(edu)
names(gdp)
edu$National.accounts.base.year
gdp
matchedData
grep("fiscal", matchedData$Special.Notes)
grep("fiscal june", matchedData$Special.Notes)
grep("une", matchedData$Special.Notes)
grep("june", matchedData$Special.Notes)
grep("June", matchedData$Special.Notes)
length(grep("June", matchedData$Special.Notes))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
dim(sampleTimes)
sampleTimes
length(sampleTimes)
grep("2012", sampleTimes)
length(.Last.value)
day(now)
weekdays(now)
wday(now)
sampleTimes[[1]]
class(.Last.value)
wday(sampleTimes[[1]])
y <- grep("2012", sampleTimes)
y
sampleTimes[y]
y <- sampleTimes[y]
wday(y) == 2
sum(wday(y) == 2)
matchedData <- merge(gdp, edu, by.x = "X", by.y = "CountryCode")
matchedData
dim(matchedData)
getwd()
setwd('../final_project')
getwd()
print(7)
?read.csv
x_test <- read.csv('./data/test/X_test.txt')
dim(x_test)
length(x_test)
str(x_test)
summary(x_test)
x_test[1]
x_test[[1]]
